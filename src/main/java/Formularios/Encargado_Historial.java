/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Formularios;

import Clases.Impresion;
import Clases.WebServiceClient;
import com.mycompany.soapclient.HistorialReserva;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anderson
 */
public class Encargado_Historial extends javax.swing.JPanel {

    /**
     * Creates new form Encargado_Historial
     */
    public Encargado_Historial() {
        initComponents();
        CargarTabla();
    }

    WebServiceClient obj1 = new WebServiceClient();
    Impresion obj2 = new Impresion();

    private void CargarTabla() {
        jTable1.setDefaultEditor(Object.class, null);
        List<HistorialReserva> Hreserva;

        if (cboEstado.getSelectedItem().equals("Confirmadas")) {
            Hreserva = obj1.obtenerHistorial("Confirmada");
            obj2.Mensaje = "A continuación se presentan los datos solicitados de las reservaciones aceptadas para el evento de las canchas UTEC. "
                    + "Cada fila representa una reserva, mostrando los detalles clave como el nombre del cliente, "
                    + "la fecha de la reserva y el tipo de habitación.";
        } else if (cboEstado.getSelectedItem().equals("Rechazadas")) {
            Hreserva = obj1.obtenerHistorial("Rechazada");
            obj2.Mensaje = "A continuación se presentan los datos solicitados de las reservaciones rechazadas para el evento de las canchas utec. "
                    + " Estas son las reservas que han sido confirmadas y procesadas correctamente. "
                    + " Cada fila representa una reserva, mostrando los detalles clave como el nombre del cliente, "
                    + " la fecha de la reserva y el tipo de habitación. ";
        } else {
            Hreserva = obj1.obtenerHistorial(null);
            obj2.Mensaje = "A continuación se presentan los datos solicitados de las reservaciones para el evento de las canchas utec. "
                    + " Estas son las reservas que han sido confirmadas y procesadas correctamente. "
                    + " Cada fila representa una reserva, mostrando los detalles clave como el nombre del cliente, "
                    + " la fecha de la reserva y el tipo de habitación. ";
        }

        String[] columnNames = {"Nombre", "Apellido", "Correo", "Cancha", "Fecha", "Hora", "Estado"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        for (HistorialReserva reserva : Hreserva) {
            Object[] rowData = {
                reserva.getNombre().getValue(),
                reserva.getApellido().getValue(),
                reserva.getCorreo().getValue(),
                reserva.getCancha().getValue(),
                reserva.getFechaReserva().toString(),
                reserva.getHora() != null ? formatDuration(reserva.getHora().getValue()) : "No disponible",
                reserva.getEstadoReserva().getValue()

            };
            model.addRow(rowData);
        }

        jTable1.setModel(model);
    }

    private String formatDuration(javax.xml.datatype.Duration duration) {
        long hours = duration.getHours();
        long minutes = duration.getMinutes();
        return String.format("%02d:%02d", hours, minutes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        cboEstado = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(730, 460));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 690, 370));

        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, 120, -1));

        cboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "Confirmadas", "Rechazadas" }));
        cboEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEstadoActionPerformed(evt);
            }
        });
        jPanel1.add(cboEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEstadoActionPerformed
        // TODO add your handling code here:
        CargarTabla();

    }//GEN-LAST:event_cboEstadoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CargarTabla();

        // Crear un JFileChooser para que el usuario elija la ruta y el nombre del archivo PDF
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar como PDF");
        fileChooser.setSelectedFile(new File("Reservas.pdf")); // Nombre predeterminado
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos PDF", "pdf"));

        int userSelection = fileChooser.showSaveDialog(this); // 'this' es la referencia del JFrame actual
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            // Obtener el archivo seleccionado
            File fileToSave = fileChooser.getSelectedFile();

            // Verificar que la extensión sea ".pdf", si no, agregarla
            if (!fileToSave.getAbsolutePath().endsWith(".pdf")) {
                fileToSave = new File(fileToSave.getAbsolutePath() + ".pdf");
            }

            // Llamada al método de exportación para guardar el PDF en la ruta seleccionada
            try {
                Impresion.exportTableToPDF(jTable1, fileToSave.getAbsolutePath());
                JOptionPane.showMessageDialog(null, "El archivo PDF se ha generado correctamente.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al generar el PDF: " + e.getMessage());
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "El usuario canceló la operación.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
